{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst button = document.querySelector('.button-submit-timer');\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\nlet userSelectedDate = null;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    userSelectedDate = selectedDate;\n    if (userSelectedDate < new Date()) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      button.setAttribute('disabled', '');\n    } else {\n      button.removeAttribute('disabled', '');\n    }\n  },\n};\nflatpickr('#datetime-picker', options);\n\nbutton.addEventListener('click', () => {\n  setInterval(() => {\n    const currentTime = new Date();\n    const ms = userSelectedDate - currentTime;\n\n    if (ms <= 0) {\n      return;\n    } else {\n      const { days, hours, minutes, seconds } = convertMs(ms);\n      updateTimerDisplay({ days, hours, minutes, seconds });\n    }\n  }, 1000);\n  button.setAttribute('disabled', '');\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n\n  const hours = Math.floor((ms % day) / hour);\n\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) {\n  daysSpan.textContent = String(days).padStart(2, '0');\n  hoursSpan.textContent = String(hours).padStart(2, '0');\n  minutesSpan.textContent = String(minutes).padStart(2, '0');\n  secondsSpan.textContent = String(seconds).padStart(2, '0');\n}\n"],"names":["button","daysSpan","hoursSpan","minutesSpan","secondsSpan","userSelectedDate","options","selectedDates","iziToast","flatpickr","ms","days","hours","minutes","seconds","convertMs","updateTimerDisplay"],"mappings":"2FASA,MAAMA,EAAS,SAAS,cAAc,sBAAsB,EACtDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAC3D,IAAIC,EAAmB,KACvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAErBF,EADqBE,EAAc,CAAC,EAEhCF,EAAmB,IAAI,MACzBG,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAClB,CAAO,EACDR,EAAO,aAAa,WAAY,EAAE,GAElCA,EAAO,gBAAgB,WAAY,EAAE,CAExC,CACH,EACAS,EAAU,mBAAoBH,CAAO,EAErCN,EAAO,iBAAiB,QAAS,IAAM,CACrC,YAAY,IAAM,CAEhB,MAAMU,EAAKL,EADS,IAAI,KAGxB,GAAI,EAAAK,GAAM,GAEH,CACL,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EACtDM,EAAmB,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAAA,CACrD,CACF,EAAE,GAAI,EACPd,EAAO,aAAa,WAAY,EAAE,CACpC,CAAC,EAED,SAASe,EAAUL,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CACA,SAASE,EAAmB,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC7Db,EAAS,YAAc,OAAOU,CAAI,EAAE,SAAS,EAAG,GAAG,EACnDT,EAAU,YAAc,OAAOU,CAAK,EAAE,SAAS,EAAG,GAAG,EACrDT,EAAY,YAAc,OAAOU,CAAO,EAAE,SAAS,EAAG,GAAG,EACzDT,EAAY,YAAc,OAAOU,CAAO,EAAE,SAAS,EAAG,GAAG,CAC3D"}